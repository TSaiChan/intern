{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thumm\\\\OneDrive\\\\Desktop\\\\digi-goat\\\\front-end\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport './css/login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Registeration() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [otpVerified, setOtpVerified] = useState(false);\n  const [timerActive, setTimerActive] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(120);\n  const [attempts, setAttempts] = useState(0);\n  const [tooManyRequests, setTooManyRequests] = useState(false);\n  const [cooldownTime, setCooldownTime] = useState(0);\n  const [otpExpired, setOtpExpired] = useState(false);\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    name: '',\n    phone_number: '',\n    password: '',\n    confirmPassword: '',\n    group_id: ''\n  });\n  const isValidEmail = email => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  const isValidPhoneNumber = phone => /^\\d{10}$/.test(phone);\n  const handleSendOtp = async () => {\n    if (!isValidEmail(email)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Invalid Email',\n        text: 'Please enter a valid email address.',\n        confirmButtonColor: '#3085d6'\n      });\n      return;\n    }\n    if (attempts >= 3) {\n      setTooManyRequests(true);\n      setCooldownTime(60);\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:3000/api/users/send-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setOtpSent(true);\n        setOtpExpired(false);\n        setTimerActive(true);\n        setTimeLeft(120);\n        setAttempts(prev => prev + 1);\n        Swal.fire({\n          icon: 'success',\n          title: 'OTP Sent',\n          text: 'OTP sent to your email.',\n          confirmButtonColor: '#3085d6'\n        });\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'OTP Failed',\n          text: data.message || 'Failed to send OTP.',\n          confirmButtonColor: '#3085d6'\n        });\n        if (data.message.includes('Too many OTP requests')) {\n          setTooManyRequests(true);\n          setCooldownTime(data.waitTime || 60);\n        }\n      }\n    } catch (error) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Network Error',\n        text: 'Failed to send OTP. Please try again.',\n        confirmButtonColor: '#3085d6'\n      });\n    }\n  };\n  const handleVerifyOtp = async () => {\n    if (!otp) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Invalid OTP',\n        text: 'Please enter the OTP.',\n        confirmButtonColor: '#3085d6'\n      });\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:3000/api/users/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          otp\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setOtpVerified(true);\n        setTimerActive(false);\n        Swal.fire({\n          icon: 'success',\n          title: 'OTP Verified',\n          text: 'Email verified! Please complete registration.',\n          confirmButtonColor: '#3085d6'\n        });\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Invalid OTP',\n          text: data.message || 'Invalid or expired OTP.',\n          confirmButtonColor: '#3085d6'\n        });\n        setOtp('');\n      }\n    } catch (error) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Network Error',\n        text: 'Failed to verify OTP. Please try again.',\n        confirmButtonColor: '#3085d6'\n      });\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      name,\n      phone_number,\n      password,\n      confirmPassword,\n      group_id\n    } = formData;\n    if (!name || !phone_number || !password || !confirmPassword || group_id === '') {\n      Swal.fire({\n        icon: 'error',\n        title: 'Incomplete Form',\n        text: 'Please fill all fields.',\n        confirmButtonColor: '#3085d6'\n      });\n      return;\n    }\n    if (!isValidPhoneNumber(phone_number)) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Invalid Phone Number',\n        text: 'Please enter a valid 10-digit phone number.',\n        confirmButtonColor: '#3085d6'\n      });\n      return;\n    }\n    if (password !== confirmPassword) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Password Mismatch',\n        text: 'Passwords do not match.',\n        confirmButtonColor: '#3085d6'\n      });\n      return;\n    }\n    if (password.length < 6) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Weak Password',\n        text: 'Password must be at least 6 characters long.',\n        confirmButtonColor: '#3085d6'\n      });\n      return;\n    }\n    try {\n      const payload = {\n        ...formData,\n        email,\n        group_id: Number(formData.group_id)\n      };\n      const res = await fetch('http://localhost:3000/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        Swal.fire({\n          icon: 'success',\n          title: 'Registration Successful',\n          text: 'Please log in to continue.',\n          confirmButtonColor: '#3085d6'\n        }).then(() => navigate('/'));\n      } else {\n        Swal.fire({\n          icon: 'error',\n          title: 'Registration Failed',\n          text: data.message || 'An unknown error occurred.',\n          confirmButtonColor: '#3085d6'\n        });\n      }\n    } catch (error) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Network Error',\n        text: 'Failed to register. Please try again.',\n        confirmButtonColor: '#3085d6'\n      });\n    }\n  };\n  useEffect(() => {\n    let interval;\n    if (timerActive && timeLeft > 0) {\n      interval = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (timerActive && timeLeft === 0) {\n      setTimerActive(false);\n      setOtpExpired(true);\n      setOtp('');\n      Swal.fire({\n        icon: 'error',\n        title: 'OTP Expired',\n        text: 'OTP has expired. Please request a new one.',\n        confirmButtonColor: '#3085d6'\n      });\n    }\n    return () => clearInterval(interval);\n  }, [timerActive, timeLeft]);\n  useEffect(() => {\n    let cooldownInterval;\n    if (tooManyRequests && cooldownTime > 0) {\n      cooldownInterval = setInterval(() => {\n        setCooldownTime(prevTime => {\n          if (prevTime === 1) {\n            setTooManyRequests(false);\n            setAttempts(0);\n            Swal.fire({\n              icon: 'info',\n              title: 'Cooldown Ended',\n              text: 'You can now request a new OTP.',\n              confirmButtonColor: '#3085d6'\n            });\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(cooldownInterval);\n  }, [tooManyRequests, cooldownTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex font-poppins items-center justify-center min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-md p-5 space-y-5 bg-white rounded-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-center text-gray-800\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), !otpVerified ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"block text-md text-gray-700 mb-2\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            className: \"input-group input\",\n            placeholder: \"you@example.com\",\n            disabled: tooManyRequests\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendOtp,\n          className: \"login-button\",\n          disabled: timerActive && !otpExpired || tooManyRequests,\n          children: \"Send OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), otpSent && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"otp\",\n              className: \"block text-md text-gray-700 mb-2\",\n              children: \"Enter OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"otp\",\n              type: \"text\",\n              value: otp,\n              onChange: e => setOtp(e.target.value),\n              required: true,\n              className: \"input-group input\",\n              placeholder: \"Enter OTP\",\n              disabled: tooManyRequests || otpExpired\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleVerifyOtp,\n            className: \"login-button\",\n            disabled: tooManyRequests || otpExpired,\n            children: \"Verify OTP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this), timerActive && !otpExpired && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Time left to enter OTP: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: timeLeft\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 48\n              }, this), \" seconds\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), tooManyRequests && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Too many requests. Please wait \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: cooldownTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 51\n            }, this), \" seconds.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold text-center\",\n          children: \"Complete your registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"block text-md text-gray-700 mb-2\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            name: \"name\",\n            type: \"text\",\n            value: formData.name,\n            onChange: handleChange,\n            required: true,\n            placeholder: \"Your full name\",\n            className: \"input-group input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone_number\",\n            className: \"block text-md text-gray-700 mb-2\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"phone_number\",\n            name: \"phone_number\",\n            type: \"text\",\n            value: formData.phone_number,\n            onChange: handleChange,\n            required: true,\n            placeholder: \"1234567890\",\n            className: \"input-group input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"block text-md text-gray-700 mb-2\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            required: true,\n            placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n            className: \"input-group input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            className: \"block text-md text-gray-700 mb-2\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            type: \"password\",\n            value: formData.confirmPassword,\n            onChange: handleChange,\n            required: true,\n            placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n            className: \"input-group input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"group_id\",\n            className: \"block text-md text-gray-700 mb-2\",\n            children: \"Select Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"group_id\",\n            name: \"group_id\",\n            value: formData.group_id,\n            onChange: handleChange,\n            required: true,\n            className: \"input-group input\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              hidden: true,\n              children: \"Select Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n_s(Registeration, \"iQI7omDj3uk1StO1LEqQBQQt6zU=\", false, function () {\n  return [useNavigate];\n});\n_c = Registeration;\nexport default Registeration;\nvar _c;\n$RefreshReg$(_c, \"Registeration\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Swal","jsxDEV","_jsxDEV","Fragment","_Fragment","Registeration","_s","email","setEmail","otp","setOtp","otpSent","setOtpSent","otpVerified","setOtpVerified","timerActive","setTimerActive","timeLeft","setTimeLeft","attempts","setAttempts","tooManyRequests","setTooManyRequests","cooldownTime","setCooldownTime","otpExpired","setOtpExpired","navigate","formData","setFormData","name","phone_number","password","confirmPassword","group_id","isValidEmail","test","isValidPhoneNumber","phone","handleSendOtp","fire","icon","title","text","confirmButtonColor","res","fetch","method","headers","body","JSON","stringify","data","json","ok","prev","message","includes","waitTime","error","handleVerifyOtp","handleChange","e","target","value","handleSubmit","preventDefault","length","payload","Number","then","interval","setInterval","prevTime","clearInterval","cooldownInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","required","placeholder","disabled","onClick","onSubmit","hidden","_c","$RefreshReg$"],"sources":["C:/Users/thumm/OneDrive/Desktop/digi-goat/front-end/src/components/Register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport './css/login.css';\r\n\r\nfunction Registeration() {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [otpVerified, setOtpVerified] = useState(false);\r\n  const [timerActive, setTimerActive] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(120);\r\n  const [attempts, setAttempts] = useState(0);\r\n  const [tooManyRequests, setTooManyRequests] = useState(false);\r\n  const [cooldownTime, setCooldownTime] = useState(0);\r\n  const [otpExpired, setOtpExpired] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phone_number: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    group_id: '',\r\n  });\r\n\r\n  const isValidEmail = (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n  const isValidPhoneNumber = (phone) => /^\\d{10}$/.test(phone);\r\n\r\n  const handleSendOtp = async () => {\r\n    if (!isValidEmail(email)) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Invalid Email',\r\n        text: 'Please enter a valid email address.',\r\n        confirmButtonColor: '#3085d6',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (attempts >= 3) {\r\n      setTooManyRequests(true);\r\n      setCooldownTime(60);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:3000/api/users/send-otp', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setOtpSent(true);\r\n        setOtpExpired(false);\r\n        setTimerActive(true);\r\n        setTimeLeft(120);\r\n        setAttempts((prev) => prev + 1);\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'OTP Sent',\r\n          text: 'OTP sent to your email.',\r\n          confirmButtonColor: '#3085d6',\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'OTP Failed',\r\n          text: data.message || 'Failed to send OTP.',\r\n          confirmButtonColor: '#3085d6',\r\n        });\r\n        if (data.message.includes('Too many OTP requests')) {\r\n          setTooManyRequests(true);\r\n          setCooldownTime(data.waitTime || 60);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Network Error',\r\n        text: 'Failed to send OTP. Please try again.',\r\n        confirmButtonColor: '#3085d6',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    if (!otp) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Invalid OTP',\r\n        text: 'Please enter the OTP.',\r\n        confirmButtonColor: '#3085d6',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:3000/api/users/verify-otp', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, otp }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setOtpVerified(true);\r\n        setTimerActive(false);\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'OTP Verified',\r\n          text: 'Email verified! Please complete registration.',\r\n          confirmButtonColor: '#3085d6',\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Invalid OTP',\r\n          text: data.message || 'Invalid or expired OTP.',\r\n          confirmButtonColor: '#3085d6',\r\n        });\r\n        setOtp('');\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Network Error',\r\n        text: 'Failed to verify OTP. Please try again.',\r\n        confirmButtonColor: '#3085d6',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { name, phone_number, password, confirmPassword, group_id } = formData;\r\n\r\n    if (!name || !phone_number || !password || !confirmPassword || group_id === '') {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Incomplete Form',\r\n        text: 'Please fill all fields.',\r\n        confirmButtonColor: '#3085d6',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!isValidPhoneNumber(phone_number)) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Invalid Phone Number',\r\n        text: 'Please enter a valid 10-digit phone number.',\r\n        confirmButtonColor: '#3085d6',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Password Mismatch',\r\n        text: 'Passwords do not match.',\r\n        confirmButtonColor: '#3085d6',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Weak Password',\r\n        text: 'Password must be at least 6 characters long.',\r\n        confirmButtonColor: '#3085d6',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const payload = { ...formData, email, group_id: Number(formData.group_id) };\r\n      const res = await fetch('http://localhost:3000/api/users/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Registration Successful',\r\n          text: 'Please log in to continue.',\r\n          confirmButtonColor: '#3085d6',\r\n        }).then(() => navigate('/'));\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Registration Failed',\r\n          text: data.message || 'An unknown error occurred.',\r\n          confirmButtonColor: '#3085d6',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Network Error',\r\n        text: 'Failed to register. Please try again.',\r\n        confirmButtonColor: '#3085d6',\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (timerActive && timeLeft > 0) {\r\n      interval = setInterval(() => {\r\n        setTimeLeft((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n    } else if (timerActive && timeLeft === 0) {\r\n      setTimerActive(false);\r\n      setOtpExpired(true);\r\n      setOtp('');\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'OTP Expired',\r\n        text: 'OTP has expired. Please request a new one.',\r\n        confirmButtonColor: '#3085d6',\r\n      });\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [timerActive, timeLeft]);\r\n\r\n  useEffect(() => {\r\n    let cooldownInterval;\r\n    if (tooManyRequests && cooldownTime > 0) {\r\n      cooldownInterval = setInterval(() => {\r\n        setCooldownTime((prevTime) => {\r\n          if (prevTime === 1) {\r\n            setTooManyRequests(false);\r\n            setAttempts(0);\r\n            Swal.fire({\r\n              icon: 'info',\r\n              title: 'Cooldown Ended',\r\n              text: 'You can now request a new OTP.',\r\n              confirmButtonColor: '#3085d6',\r\n            });\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(cooldownInterval);\r\n  }, [tooManyRequests, cooldownTime]);\r\n\r\n  return (\r\n    <div className=\"flex font-poppins items-center justify-center min-h-screen\">\r\n      <div className=\"w-full max-w-md p-5 space-y-5 bg-white rounded-2xl\">\r\n        <h1 className=\"text-4xl font-bold text-center text-gray-800\">Register</h1>\r\n\r\n        {!otpVerified ? (\r\n          <>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"email\" className=\"block text-md text-gray-700 mb-2\">Email</label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                required\r\n                className=\"input-group input\"\r\n                placeholder=\"you@example.com\"\r\n                disabled={tooManyRequests}\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              onClick={handleSendOtp}\r\n              className=\"login-button\"\r\n              disabled={(timerActive && !otpExpired) || tooManyRequests}\r\n            >\r\n              Send OTP\r\n            </button>\r\n\r\n            {otpSent && (\r\n              <>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"otp\" className=\"block text-md text-gray-700 mb-2\">Enter OTP</label>\r\n                  <input\r\n                    id=\"otp\"\r\n                    type=\"text\"\r\n                    value={otp}\r\n                    onChange={(e) => setOtp(e.target.value)}\r\n                    required\r\n                    className=\"input-group input\"\r\n                    placeholder=\"Enter OTP\"\r\n                    disabled={tooManyRequests || otpExpired}\r\n                  />\r\n                </div>\r\n                <button\r\n                  onClick={handleVerifyOtp}\r\n                  className=\"login-button\"\r\n                  disabled={tooManyRequests || otpExpired}\r\n                >\r\n                  Verify OTP\r\n                </button>\r\n                {timerActive && !otpExpired && (\r\n                  <div className=\"text-center mt-4\">\r\n                    <p>Time left to enter OTP: <span>{timeLeft}</span> seconds</p>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {tooManyRequests && (\r\n              <div className=\"text-center mt-4\">\r\n                <p>Too many requests. Please wait <span>{cooldownTime}</span> seconds.</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <h3 className=\"text-xl font-semibold text-center\">Complete your registration</h3>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"name\" className=\"block text-md text-gray-700 mb-2\">Full Name</label>\r\n              <input\r\n                id=\"name\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                required\r\n                placeholder=\"Your full name\"\r\n                className=\"input-group input\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"phone_number\" className=\"block text-md text-gray-700 mb-2\">Phone Number</label>\r\n              <input\r\n                id=\"phone_number\"\r\n                name=\"phone_number\"\r\n                type=\"text\"\r\n                value={formData.phone_number}\r\n                onChange={handleChange}\r\n                required\r\n                placeholder=\"1234567890\"\r\n                className=\"input-group input\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"password\" className=\"block text-md text-gray-700 mb-2\">Password</label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n                required\r\n                placeholder=\"••••••••\"\r\n                className=\"input-group input\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"confirmPassword\" className=\"block text-md text-gray-700 mb-2\">Confirm Password</label>\r\n              <input\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                value={formData.confirmPassword}\r\n                onChange={handleChange}\r\n                required\r\n                placeholder=\"••••••••\"\r\n                className=\"input-group input\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"group_id\" className=\"block text-md text-gray-700 mb-2\">Select Role</label>\r\n              <select\r\n                id=\"group_id\"\r\n                name=\"group_id\"\r\n                value={formData.group_id}\r\n                onChange={handleChange}\r\n                required\r\n                className=\"input-group input\"\r\n              >\r\n                <option value=\"\" disabled hidden>Select Role</option>\r\n                <option value=\"1\">User</option>\r\n                <option value=\"0\">Admin</option>\r\n              </select>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"login-button\">Register</button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registeration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}